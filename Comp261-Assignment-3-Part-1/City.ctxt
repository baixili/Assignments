#BlueJ class context
comment0.target=City
comment0.text=\r\n\ Structure\ for\ holding\ city\ information\r\n
comment1.params=x\ y\ name\ id
comment1.target=City(double,\ double,\ java.lang.String,\ java.lang.String)
comment1.text=\r\n\ Constructor\ for\ a\ city\r\n\ \r\n\ @param\ id\ \ \ 4\ \ digit\ city\ id\r\n\ @param\ name\ Long\ name\ for\ the\ city\r\n\ @param\ lat\r\n\ @param\ lon\r\n
comment10.params=
comment10.target=java.util.Collection\ getEdgeIds()
comment10.text=Get\ the\ collection\ of\ edges\ out\ of\ the\ city\ -\ remember\ this\ also\ includes\ reverse\ edges\ added\ to\ support\ Edmond-karp\ algorithm
comment11.params=edgeId
comment11.target=void\ addEdgeId(java.lang.String)
comment11.text=add\ a\ new\ edge
comment2.params=
comment2.target=javafx.geometry.Point2D\ getPoint()
comment2.text=\r\n\ Get\ the\ location\ of\ the\ City\r\n
comment3.params=
comment3.target=java.lang.String\ getName()
comment4.params=
comment4.target=java.lang.String\ getId()
comment5.params=loc
comment5.target=double\ distanceTo(javafx.geometry.Point2D)
comment5.text=\r\n\ Returns\ distance\ in\ meters\ between\ this\ City\ and\ a\ Location\r\n
comment6.params=toCity
comment6.target=double\ distanceTo(City)
comment6.text=\r\n\ Returns\ distance\ in\ meters\ between\ this\ City\ and\ another\ City\r\n
comment7.params=other
comment7.target=int\ compareTo(City)
comment7.text=\r\n\ Compare\ by\ alphabetic\ order\ of\ name,\r\n
comment8.params=
comment8.target=java.lang.String\ toString()
comment8.text=\ \r\n\ Display\ a\ City\r\n\ \r\n\ @return\ string\ of\ the\ city\ information\ in\ the\ format\:\ XXXX\:\ name\ at\ (x,y)\r\n
comment9.params=point
comment9.target=boolean\ atLocation(javafx.geometry.Point2D)
comment9.text=\r\n\ @param\ a\ Point\ to\ check\ if\ the\ city\ is\ in\ an\ **identical**\ location\r\n\ @return\ is\ this\ city\ is\ at\ the\ same\ location\ as\ the\ given\ point\r\n
numComments=12
